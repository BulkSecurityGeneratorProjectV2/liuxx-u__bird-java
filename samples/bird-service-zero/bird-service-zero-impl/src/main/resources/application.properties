spring.application.name = bird-service-zero
server.port = 8081

#################################### dubbo ####################################
# ApplicationConfig Bean
dubbo.application.id = bird-service-zero
dubbo.application.name = bird-service-zero

## ProtocolConfig Bean
dubbo.protocol.id = dubbo
dubbo.protocol.name = dubbo
dubbo.protocol.host= localhost
dubbo.protocol.port = 7001
dubbo.protocol.threads=100

## RegistryConfig Bean
dubbo.registry.id = zookeeper
dubbo.registry.protocol=zookeeper
dubbo.registry.address = localhost:2181

dubbo.provider.timeout=20000
dubbo.provider.filter=providerSession,birdException,-exception

dubbo.consumer.check=false
dubbo.consumer.loadbalance=leastactive
dubbo.consumer.cluster=failfast
dubbo.consumer.filter=consumerSession

################################## gateway ##################################
gateway.zookeeper.url=localhost:2181
gateway.zookeeper.sessionTimeout=5000
gateway.zookeeper.connectionTimeout=2000
gateway.zookeeper.serializer=KryoSerializer

################################## datasource ##################################
# 数据库访问配置
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/demo-zero?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&serverTimezone=PRC&useSSL=false
spring.datasource.username=root
spring.datasource.password=bird123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 连接池补充设置
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000

################################# mybatis-plus #################################
mybatis-plus.mapper-locations= classpath*:com/bird/service/zero/**/*.xml
# 实体扫描，多个package用逗号或者分号分隔
mybatis-plus.typeAliasesPackage= com.bird.service.zero.**.model*
# 主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
mybatis-plus.global-config.id-type=0
mybatis-plus.global-config.db-column-underline=false
# 逻辑删除配置
mybatis-plus.global-config.logic-delete-value= 1
mybatis-plus.global-config.logic-not-delete-value= 0
mybatis-plus.global-config.sql-injector= com.baomidou.mybatisplus.mapper.LogicSqlInjector
# 审计字段（createTime,modifiedTime）自动填充处理器
mybatis-plus.global-config.meta-object-handler=com.bird.service.common.mapper.injector.AuditMetaObjectHandler

#################################### redis ####################################
spring.redis.database=1
# Redis服务器地址
spring.redis.host=10.10.116.16
# Redis服务器连接端口
spring.redis.port=6739  
# Redis服务器连接密码（默认为空）
spring.redis.password=thctlrbetc
# 连接超时时间（毫秒）
spring.redis.timeout=0
# 默认过期时间
spring.redis.expiration=600

##################################### kafka ####################################
eventbus.kafka.host=118.31.47.110:9092,116.62.244.225:9092,47.98.147.172:9092
eventbus.kafka.provider.defaultTopic=thctay-kafka-default-topic
eventbus.kafka.provider.retries=5
eventbus.kafka.provider.batchSize=16384
eventbus.kafka.provider.lingerms=3
eventbus.kafka.provider.bufferMemory=33554432
eventbus.kafka.listener.basePackages=com.bird.service.zero
eventbus.kafka.listener.groupId=thctay-service-voucher-group

##################################### rabbit ####################################
#eventbus.rabbit.address = localhost:5672
#eventbus.rabbit.user = guest
#eventbus.rabbit.password = guest
#eventbus.rabbit.listenerPackages = com.bird.service.zero